{"version":3,"sources":["webpack:///./src/components/icons/website.tsx","webpack:///./src/templates/author.tsx"],"names":["Website","Object","core_browser_esm","xmlns","viewBox","style","height","d","stroke","strokeLinejoin","strokeMiterlimit","fill","HiddenMobile","emotion_esm","name","styles","AuthorMeta","styled_base_browser_esm","target","AuthorBio","Bull","AuthorProfileBioImage","pageQuery","Author","props","author","data","authorYaml","_props$data$allMarkdo","allMarkdownRemark","edges","totalCount","layouts","Helmet_default","a","lang","config","id","title","content","bio","property","siteUrl","pathContext","slug","twitter","split","Wrapper","className","SiteHeader","outer","backgroundImage","profile_image","childImageSharp","fluid","src","inner","SiteNav","isHome","shared","AuthorProfileImage","avatar","alt","location","website","SocialLink","href","rel","facebook","SiteMain","PostFeed","PostFeedRaise","map","_ref","node","frontmatter","PostCard","key","fields","post","Footer"],"mappings":"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","file":"component---src-templates-author-tsx-f17c043544ace9baaaba.js","sourcesContent":["// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Website: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\n    <path\n      d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\n      stroke=\"#fff\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      fill=\"none\"\n    />\n  </svg>\n);\nexport default Website;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SocialLink,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Facebook from '../components/icons/facebook';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\nimport Website from '../components/icons/website';\nimport Twitter from '../components/icons/twitter';\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorMeta = styled.div`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-family: Georgia, serif;\n  font-style: italic;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 5px 0 10px 0;\n  max-width: 600px;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nconst Bull = styled.span`\n  display: inline-block;\n  margin: 0 12px;\n  opacity: 0.5;\n`;\n\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 0 0 20px 0;\n  width: 100px;\n  height: 100px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n`;\n\ninterface AuthorTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    author: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n    authorYaml: {\n      id: string;\n      website?: string;\n      twitter?: string;\n      facebook?: string;\n      location?: string;\n      profile_image?: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n      bio?: string;\n      avatar: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n    };\n  };\n}\n\nconst Author: React.FunctionComponent<AuthorTemplateProps> = props => {\n  const author = props.data.authorYaml;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {author.id} - {config.title}\n        </title>\n        <meta name=\"description\" content={author.bio} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        <meta property=\"article:publisher\" content=\"\" />\n        <meta property=\"article:author\" content=\"\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[0]}`} />\n        <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[0]}`}\n        />\n      </Helmet>\n      <Wrapper>\n        <header\n          className={`${SiteHeader} ${outer} no-cover`}\n          style={{\n            backgroundImage: author.profile_image\n              ? `url(${author.profile_image.childImageSharp.fluid.src})`\n              : '',\n          }}\n        >\n          <div className={`${inner}`}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <img\n                className={`${AuthorProfileBioImage} ${AuthorProfileImage}`}\n                src={props.data.authorYaml.avatar.childImageSharp.fluid.src}\n                alt={author.id}\n              />\n              <SiteTitle>{author.id}</SiteTitle>\n              {author.bio && <AuthorBio>{author.bio}</AuthorBio>}\n              <AuthorMeta>\n                {author.location && (\n                  <div className={`${HiddenMobile}`}>\n                    {author.location} <Bull>&bull;</Bull>\n                  </div>\n                )}\n                <div className={`${HiddenMobile}`}>\n                  {totalCount > 1 && `${totalCount} posts`}\n                  {totalCount === 1 && `1 post`}\n                  {totalCount === 0 && `No posts`} <Bull>•</Bull>\n                </div>\n                {author.website && (\n                  <div>\n                    <a\n                      className={`${SocialLink} social-link-wb`}\n                      href={author.website}\n                      title=\"Website\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Website />\n                    </a>\n                  </div>\n                )}\n                {author.twitter && (\n                  <a\n                    className={`${SocialLink} social-link-tw`}\n                    href={`https://twitter.com/${author.twitter}`}\n                    title=\"Twitter\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Twitter />\n                  </a>\n                )}\n                {author.facebook && (\n                  <a\n                    className={`${SocialLink} social-link-fb`}\n                    href={`https://www.facebook.com/${author.facebook}`}\n                    title=\"Facebook\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Facebook />\n                  </a>\n                )}\n              </AuthorMeta>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed} ${PostFeedRaise}`}>\n              {edges.map(({ node }) => {\n                if (node.frontmatter.author && node.frontmatter.author.id === author.id) {\n                  return <PostCard key={node.fields.slug} post={node} />;\n                }\n                return null;\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    authorYaml(id: { eq: $author }) {\n      id\n      website\n      twitter\n      bio\n      facebook\n      location\n      profile_image {\n        childImageSharp {\n          fluid(maxWidth: 3720) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      avatar {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(limit: 2000, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}